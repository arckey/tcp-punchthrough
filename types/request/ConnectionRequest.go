// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package request

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ConnectionRequest struct {
	_tab flatbuffers.Table
}

func GetRootAsConnectionRequest(buf []byte, offset flatbuffers.UOffsetT) *ConnectionRequest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ConnectionRequest{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *ConnectionRequest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ConnectionRequest) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *ConnectionRequest) Peer() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ConnectionRequest) Requester() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func ConnectionRequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func ConnectionRequestAddPeer(builder *flatbuffers.Builder, peer flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(peer), 0)
}
func ConnectionRequestAddRequester(builder *flatbuffers.Builder, requester flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(requester), 0)
}
func ConnectionRequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
